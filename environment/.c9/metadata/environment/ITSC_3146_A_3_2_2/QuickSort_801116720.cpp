{"changed":true,"filter":false,"title":"QuickSort_801116720.cpp","tooltip":"/ITSC_3146_A_3_2_2/QuickSort_801116720.cpp","value":"//\n//  QuickSort_Skeleton.cpp\n//\n//  Created by Bahamon, Julio on 6/25/19.\n//  UNC Charlotte\n//  Copyright Â© 2019 Bahamon, Julio. All rights reserved.\n//\n\n#include <iostream>\n#include <cstdlib>\n#include <cstring>\n#include <iomanip>\n\nusing namespace std;\n\n//  Declaring a new struct to store patient data\nstruct patient {\n    int age;\n    char name[20];\n    float balance;\n};\n\n\n\n\n//  THE FUNCTION RETURNS AN INTEGER AS FOLLOWS:\n//      -1 IF THE AGE OF THE FIRST PATIENT IS LESS\n//         THAN THE SECOND PATIENT'S AGE\n//       0 IF THE AGES ARE EQUAL\n//       1 OTHERWISE\nint compareAge(const void * a, const void * b){\n   const patient * p1 = (patient*)a;\n   const patient * p2 = (patient*)b;\n   \n   if(p1->age < p2->age) return -1;\n   if(p1->age == p2->age) return 0;\n   if(p1->age > p2->age) return 1;\n}\n//source for help with qsort https://www.programiz.com/cpp-programming/library-function/cstdlib/qsort\n\n\n\n//  THE FUNCTION RETURNS AN INTEGER AS FOLLOWS:\n//      -1 IF THE BALANCE FOR THE FIRST PATIENT IS LESS\n//         THAN THE SECOND PATIENT'S BALANCE\n//       0 IF THE BALANCES ARE EQUAL\n//       1 OTHERWISE\nint compareBalance(const void * a, const void * b){\n   const patient * p1 = (patient*)a;\n   const patient * p2 = (patient*)b;\n   \n   if(p1->balance < p2->balance) return -1;\n   if(p1->balance == p2->balance) return 0;\n   if(p1->balance > p2->balance) return 1;\n}\n\n//  TODO:\n//  IMPLEMENT A FUNCTION THAT COMPARES TWO PATIENTS BY NAME\n\n//  THE FUNCTION RETURNS AN INTEGER AS FOLLOWS:\n//      -1 IF THE NAME OF THE FIRST PATIENT GOES BEFORE\n//         THE SECOND PATIENT'S NAME\n//       0 IF THE AGES ARE EQUAL\n//       1 OTHERWISE\nint compareName(const void * a, const void * b){\n   const patient * p1 = (patient*)a;\n   const patient * p2 = (patient*)b;\n   \n   if(strncmp(p1->name, p2->name, 3) < 0) return -1;\n   if(strncmp(p1->name, p2->name, 3) == 0) return 0;\n   if(strncmp(p1->name, p2->name, 3) > 0)return 1;\n}\n//  (SEE http://www.cplusplus.com/reference/cstring/strncmp/)\n\n\n\nvoid printData(patient * x){\n    for(int i = 0; i < 5; i++){\n        cout << setw(5) << left << \"Age: \" << x[i].age;\n        cout << setw(7) << left << \"  Name: \" << x[i].name;\n        cout << setw(10) << left << \"  Balance: \" << x[i].balance<< \"\\n\";\n    }\n    cout << \"\\n\\n\";\n}\n//source for alligment/setw http://www.cplusplus.com/reference/iomanip/setw/\n\n//The main program\nint main()\n{\n    int total_patients = 5;\n    \n    //  Storing some test data\n    struct patient patient_list[5] = {\n        {25, \"Juan Valdez   \", 1250},\n        {15, \"James Morris  \", 2100},\n        {32, \"Tyra Banks    \", 750},\n        {62, \"Maria O'Donell\", 375},\n        {53, \"Pablo Picasso \", 615}\n    };\n    \n    patient * arr = patient_list;\n    \n    cout << \"Patient List: \" << endl;\n    \n    printData(arr);\n    \n    cout << endl;\n    \n    \n    cout << \"Sorting...\" << endl;\n\n    qsort(arr, 5, sizeof(patient), compareAge);\n    \n    cout << \"Patient List - Sorted by Age: \" << endl;\n    \n    printData(arr);\n    \n    cout << endl;\n    \n    \n    cout << \"Sorting...\" << endl;\n    \n    qsort(arr, 5, sizeof(patient), compareBalance);\n    \n    cout << \"Patient List - Sorted by Balance Due: \" << endl;\n    \n    printData(arr);\n    \n    cout << endl;\n    \n    \n    cout << \"Sorting...\" << endl;\n    \n    qsort(arr, 5, sizeof(patient), compareName);\n    \n    cout << \"Patient List - Sorted by Name: \" << endl;\n    \n    printData(arr);\n    \n    cout << endl;\n    \n    return 0;\n}\n","undoManager":{"mark":-2,"position":-1,"stack":[]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":143,"column":0},"end":{"row":143,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1612373641074}